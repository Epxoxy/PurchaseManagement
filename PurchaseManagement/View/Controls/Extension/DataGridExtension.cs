using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;

namespace PurchaseManagement.Extension
{
    public class DataGridExtension
    {
        public static bool GetAutoGeneratedID(DependencyObject obj)
        {
            return (bool)obj.GetValue(AutoGeneratedIDProperty);
        }

        public static void SetAutoGeneratedID(DependencyObject obj, bool value)
        {
            obj.SetValue(AutoGeneratedIDProperty, value);
        }

        // Using a DependencyProperty as the backing store for AutoGeneratedID.  This enables animation, styling, binding, etc...
        public static readonly DependencyProperty AutoGeneratedIDProperty =
            DependencyProperty.RegisterAttached("AutoGeneratedID", typeof(bool), typeof(DataGridExtension), new PropertyMetadata(false, OnAutoGeneratedIDChanged));

        private static void OnAutoGeneratedIDChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)
        {
            var datagrid = d as System.Windows.Controls.DataGrid;
            if (datagrid == null) return;
            if ((bool)e.NewValue)
            {
                datagrid.LoadingRow += OnLoadingRow;
            }
            else
            {
                datagrid.LoadingRow -= OnLoadingRow;
            }
        }

        private static void OnLoadingRow(object sender, System.Windows.Controls.DataGridRowEventArgs e)
        {
            e.Row.Header = e.Row.GetIndex() + 1;
        }
    }
}
