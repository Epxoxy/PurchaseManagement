<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:PurchaseManagement.View"
      xmlns:props="clr-namespace:PurchaseManagement.Properties"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Class="PurchaseManagement.View.LoginPage"
      mc:Ignorable="d"
      d:DesignHeight="600" d:DesignWidth="800"
      Title="LoginPage">
    <Page.Resources>
        <ControlTemplate x:Key="deleteButtonTemplate" TargetType="{x:Type Button}">
            <Border Background="{TemplateBinding Background}">
                <Path x:Name="path" Data="M0,0 8,8z M0,8 8,0z " Stroke="DarkRed" Height="8" Width="8" Margin="2"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Stroke" Value="Red" TargetName="path" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#2E0080FF"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#5426A0DA"/>
        <Style x:Key="ComboBoxItemStyle2" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}" />
            <Setter Property="Padding" Value="3,3" />
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource  Normal.FocusVisualStyle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="24"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Button x:Name="btn" Visibility="Collapsed" Grid.Column="1" BorderThickness="0" Background="Transparent" Click="rmAccountClick" CommandParameter="{TemplateBinding Content}" Template="{StaticResource deleteButtonTemplate}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Visibility" TargetName="btn" Value="Visible"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"/>
                           </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>
    <Grid>
        <Image x:Name="bg" Source="/PurchaseManagement;component/Resources/Images/background0.jpg" Stretch="UniformToFill" >
            <Image.Effect>
                <BlurEffect  KernelType="Gaussian" Radius="25"/>
            </Image.Effect>
        </Image>
        <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" FontWeight="DemiBold"
                   Text="{x:Static props:Resources.PurchaseManagement}" FontSize="18" Margin="12" Foreground="White" />

        <Border x:Name="loginLayer" Panel.ZIndex="4" Height="250" Width="360" Background="White" Padding="30,0">
            <i:Interaction.Behaviors>
                <ei:MouseDragElementBehavior/>
            </i:Interaction.Behaviors>
            <WrapPanel ItemHeight="60" ItemWidth="300" Orientation="Vertical" >
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                       Text="{x:Static props:Resources.LoginTitle}" FontSize="20"/>
                <Grid VerticalAlignment="Center">
                    <TextBlock FontSize="16" Text="{x:Static props:Resources.Account}" Padding="0,4"/>
                    <ComboBox x:Name="accountBox" HorizontalAlignment="Right" Width="220" FontSize="16" Text="logintest" Padding="0,4" IsEditable="True" ItemContainerStyle="{DynamicResource ComboBoxItemStyle2}"/>
                </Grid>
                <Grid VerticalAlignment="Center">
                    <TextBlock FontSize="16" Text="{x:Static props:Resources.Password}" Padding="0,4"/>
                    <PasswordBox x:Name="passwordBox" HorizontalAlignment="Right" FontSize="16" Width="220" Password="" Padding="0,4"/>
                </Grid>
                <HeaderedContentControl>
                    <HeaderedContentControl.Header>
                        <CheckBox x:Name="logAccountIDCheckBox" IsChecked="True" Content="{x:Static props:Resources.LogAccount}" Margin="0,0,0,7"/>
                    </HeaderedContentControl.Header>
                    <Button x:Name="loginBtn" Style="{StaticResource BlueFloatBtnStyle}" VerticalAlignment="Center" Content="{x:Static props:Resources.Login}" Height="40" FontSize="16"/>
                </HeaderedContentControl>
            </WrapPanel>
        </Border>
        <TextBlock HorizontalAlignment="Right" VerticalAlignment="Bottom" Foreground="White"
                   Text="CopyRight@Epx.2016.9" FontSize="14" Margin="7"/>
        <Button x:Name="langBtn" HorizontalAlignment="Right" VerticalAlignment="Top" Foreground="White" BorderThickness="0" Background="Transparent" FontSize="16"
                Content="{Binding NextLang, Source={x:Static props:Settings.Default}}" Style="{StaticResource TextOnlyButton}" Margin="7,4"
                Click="langBtn_Click"/>
    </Grid>
</Page>
