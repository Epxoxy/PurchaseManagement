<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="AnalysisColumn" xml:space="preserve">
    <value>Analysis    Column</value>
  </data>
  <data name="Buy" xml:space="preserve">
    <value>Buy</value>
  </data>
  <data name="ByTime" xml:space="preserve">
    <value>By Time</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Canceled" xml:space="preserve">
    <value>Canceled</value>
  </data>
  <data name="ChangePsw" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="CheckInputMsg" xml:space="preserve">
    <value>Please check input message!</value>
  </data>
  <data name="CheckOrderIDTips" xml:space="preserve">
    <value>Please check order'ID!</value>
  </data>
  <data name="ChineseToEnglishTips" xml:space="preserve">
    <value>It needs to restart application to take effect of language setting.(Target : English).
Restart application right now?</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="ConditionColumn" xml:space="preserve">
    <value>Condition Column</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Daliy" xml:space="preserve">
    <value>Daliy</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Detail" xml:space="preserve">
    <value>Detail</value>
  </data>
  <data name="EmptyTipsFormat" xml:space="preserve">
    <value>There is {0} item with empty amount, delete it?</value>
  </data>
  <data name="EnglishToChineseTips" xml:space="preserve">
    <value>语言更改生效需要重启程序(目标语言：中文).
立即重启程序?</value>
  </data>
  <data name="Error0Tips" xml:space="preserve">
    <value>Cannot connect to server. Contact administrator.</value>
  </data>
  <data name="Error1045Tips" xml:space="preserve">
    <value>Invalid username/password, please try again.</value>
  </data>
  <data name="Error1046Tips" xml:space="preserve">
    <value>Access denied for current user to database.</value>
  </data>
  <data name="Fail" xml:space="preserve">
    <value>Fail</value>
  </data>
  <data name="Food" xml:space="preserve">
    <value>Food</value>
  </data>
  <data name="Goods" xml:space="preserve">
    <value>Goods</value>
  </data>
  <data name="GoodsDetail" xml:space="preserve">
    <value>Goods detail</value>
  </data>
  <data name="GoodsID" xml:space="preserve">
    <value>Goods ID</value>
  </data>
  <data name="Handing" xml:space="preserve">
    <value>Handing</value>
  </data>
  <data name="HidePanel" xml:space="preserve">
    <value>Hide panel</value>
  </data>
  <data name="IDDetail" xml:space="preserve">
    <value>ID detail</value>
  </data>
  <data name="InfoManage" xml:space="preserve">
    <value>Info Manage</value>
  </data>
  <data name="InputRightIDTips" xml:space="preserve">
    <value>Please input right id value!</value>
  </data>
  <data name="InputTitle" xml:space="preserve">
    <value>Input Title</value>
  </data>
  <data name="InsertSuccessful" xml:space="preserve">
    <value>Insert successful!</value>
  </data>
  <data name="Interval" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="LogAccount" xml:space="preserve">
    <value>Remember login id</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginID" xml:space="preserve">
    <value>Login ID</value>
  </data>
  <data name="LoginSetting" xml:space="preserve">
    <value>Login Setting</value>
  </data>
  <data name="LoginTitle" xml:space="preserve">
    <value>System Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="MaxAmount" xml:space="preserve">
    <value>Max amount</value>
  </data>
  <data name="More" xml:space="preserve">
    <value>More</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="NewPsw" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="NewPurchaseOrder" xml:space="preserve">
    <value>New Purchase Order</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OldPsw" xml:space="preserve">
    <value>Old Password</value>
  </data>
  <data name="OrderID" xml:space="preserve">
    <value>Order ID</value>
  </data>
  <data name="OrderProjDetail" xml:space="preserve">
    <value>Order project detail</value>
  </data>
  <data name="OrderProject" xml:space="preserve">
    <value>Order Project</value>
  </data>
  <data name="OrderProjectID" xml:space="preserve">
    <value>OrderProject ID</value>
  </data>
  <data name="OrderType" xml:space="preserve">
    <value>Order Type</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="Others" xml:space="preserve">
    <value>Others</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="Personal" xml:space="preserve">
    <value>Personal</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Prices" xml:space="preserve">
    <value>Prices</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="ProjEmptyTips" xml:space="preserve">
    <value>Project is empty!</value>
  </data>
  <data name="Purchase" xml:space="preserve">
    <value>Purchse</value>
  </data>
  <data name="PurchaseID" xml:space="preserve">
    <value>Purchase ID</value>
  </data>
  <data name="PurchaseManagement" xml:space="preserve">
    <value>Purchase Management</value>
  </data>
  <data name="PurchaseOrder" xml:space="preserve">
    <value>Purchase Order</value>
  </data>
  <data name="PurchaseState" xml:space="preserve">
    <value>Purchase State</value>
  </data>
  <data name="RealAmount" xml:space="preserve">
    <value>Real amount</value>
  </data>
  <data name="RealPay" xml:space="preserve">
    <value>Real Pay</value>
  </data>
  <data name="Receipt" xml:space="preserve">
    <value>Receipt</value>
  </data>
  <data name="ReceiptDetail" xml:space="preserve">
    <value>Receipt Detail</value>
  </data>
  <data name="ReceiptID" xml:space="preserve">
    <value>ReceiptID</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="RoleName" xml:space="preserve">
    <value>Role Name</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchProj" xml:space="preserve">
    <value>Search project</value>
  </data>
  <data name="SearchTable" xml:space="preserve">
    <value>Search Table</value>
  </data>
  <data name="Specifications" xml:space="preserve">
    <value>Specifications</value>
  </data>
  <data name="StaffID" xml:space="preserve">
    <value>Staff ID</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>Statistics</value>
  </data>
  <data name="StatsColumn" xml:space="preserve">
    <value>Statistics   Column</value>
  </data>
  <data name="SubTitle" xml:space="preserve">
    <value>SubTitle</value>
  </data>
  <data name="Supplier" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="SupplierDetail" xml:space="preserve">
    <value>Supplier Detail</value>
  </data>
  <data name="SupplierID" xml:space="preserve">
    <value>Supplier ID</value>
  </data>
  <data name="Telephone" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="TimeType" xml:space="preserve">
    <value>Time Type</value>
  </data>
  <data name="Tips" xml:space="preserve">
    <value>Tips</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TotalPrices" xml:space="preserve">
    <value>Total prices</value>
  </data>
  <data name="Transform" xml:space="preserve">
    <value>Transform</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="UnitPrice" xml:space="preserve">
    <value>Unit price</value>
  </data>
  <data name="UpdateSuccessful" xml:space="preserve">
    <value>Update Successful!</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="WareHousing" xml:space="preserve">
    <value>WareHousing</value>
  </data>
  <data name="WarehousingDetail" xml:space="preserve">
    <value>Warehousing Detail</value>
  </data>
  <data name="WarehousingID" xml:space="preserve">
    <value>Warehousing ID</value>
  </data>
  <data name="WareroomID" xml:space="preserve">
    <value>Wareroom ID</value>
  </data>
  <data name="Yuan" xml:space="preserve">
    <value>Yuan</value>
  </data>
</root>